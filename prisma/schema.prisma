generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Creneau {
  date         DateTime      @db.Date
  start_time   DateTime      @db.Timestamp(6)
  end_time     DateTime      @db.Timestamp(6)
  code_creneau BigInt        @id(map: "PK_CRENEAU") @default(autoincrement())
  Examen       Examen[]
  Reservation  Reservation[]

  @@unique([date, start_time, end_time], map: "UNIQUE_CRENEAU")
}

model Departement {
  code_departement String       @id(map: "PK_DEPARTEMENT") @db.VarChar(255)
  nom_departement  String       @db.VarChar(255)
  Specialite       Specialite[]
}

model Enseignant {
  code_enseignant   String         @id(map: "PK_ENSEIGNANT") @db.VarChar(30)
  nom_enseignant    String         @db.VarChar(100)
  prenom_enseignant String         @db.VarChar(100)
  email             String         @unique(map: "UNIQUE_EMAIL") @db.VarChar(255)
  telephone_1       String?        @db.VarChar(10)
  telephone_2       String?        @db.VarChar(10)
  code_grade        String         @db.VarChar(30)
  Grade             Grade          @relation(fields: [code_grade], references: [code_grade], onDelete: SetNull, onUpdate: NoAction, map: "FK_ENSEIGNANT_GRADE")
  ChargeCours       ChargeCours[]
  Surveillance      Surveillance[]
}

model Examen {
  code_module  String        @db.VarChar(30)
  code_section String        @db.VarChar(30)
  code_creneau BigInt
  Creneau      Creneau       @relation(fields: [code_creneau], references: [code_creneau], onDelete: Cascade, onUpdate: NoAction, map: "FK_EXAMEN_CRENEAU")
  Module       Module        @relation(fields: [code_module], references: [code_module], onDelete: Cascade, onUpdate: NoAction, map: "FK_EXAMEN_MODULE")
  Section      Section       @relation(fields: [code_section], references: [code_section], onDelete: Cascade, onUpdate: NoAction, map: "FK_EXAMEN_SECTION")
  LocalExamen  LocalExamen[]

  @@id([code_module, code_section, code_creneau], map: "PK_EXAMEN")
  @@unique([code_section, code_creneau], map: "UNIQUE_SECTION_CRENEAU")
  @@unique([code_section, code_module], map: "UNIQUE_SECTION_MODULE")
}

model Grade {
  code_grade           String       @id(map: "PK_GRADE") @db.VarChar(30)
  nombre_surveillances Int
  Enseignant           Enseignant[]
}

model Local {
  code_local  String        @id(map: "PK_LOCAL") @db.VarChar(10)
  capacite    Int
  LocalExamen LocalExamen[]
  Reservation Reservation[]
}

model LocalExamen {
  code_local   String         @db.VarChar(10)
  code_module  String         @db.VarChar(30)
  code_section String         @db.VarChar(30)
  code_creneau BigInt
  Local        Local          @relation(fields: [code_local], references: [code_local], onDelete: Cascade, onUpdate: NoAction, map: "FK_LOCAEXAMEN_LOCAL")
  Examen       Examen         @relation(fields: [code_module, code_section, code_creneau], references: [code_module, code_section, code_creneau], onDelete: Cascade, onUpdate: NoAction, map: "FK_LOCALEXAMEN_EXAMEN")
  Surveillance Surveillance[]

  @@id([code_local, code_module, code_section, code_creneau], map: "PK_LOCALEXAMEN")
  @@unique([code_creneau, code_local], map: "UNIQUE_CRENEAU_LOCAL")
}

model Module {
  code_module      String             @id(map: "PK_MODULE") @db.VarChar(30)
  nom_module       String             @db.VarChar(255)
  ChargeCours      ChargeCours[]
  Examen           Examen[]
  ModuleSpecialite ModuleSpecialite[]
}

model ModuleSpecialite {
  code_module     String     @db.VarChar(30)
  code_specialite String     @db.VarChar(30)
  anneeEtude      Int
  semestre        Int
  fondamental     Boolean
  Module          Module     @relation(fields: [code_module], references: [code_module], onDelete: Cascade, onUpdate: NoAction, map: "FK_MODULESPECIALITE_MODULE")
  Specialite      Specialite @relation(fields: [code_specialite], references: [code_specialite], onDelete: Cascade, onUpdate: NoAction, map: "FK_MODULESPECIALITE_SPECIALITE")

  @@id([code_module, code_specialite], map: "PK_MODULESPECIALITE")
}

model Reservation {
  code_local   String  @db.VarChar(10)
  disponible   Boolean @default(true)
  code_creneau BigInt
  Creneau      Creneau @relation(fields: [code_creneau], references: [code_creneau], onDelete: Cascade, onUpdate: NoAction, map: "FK_RESERVATION_CRENEAU")
  Local        Local   @relation(fields: [code_local], references: [code_local], onDelete: Cascade, onUpdate: NoAction, map: "FK_RESERVATION_LOCAL")

  @@id([code_creneau, code_local], map: "PK_RESERVATION")
}

model Section {
  code_section     String        @id(map: "PK_SECTION") @db.VarChar(30)
  nom_section      String        @db.VarChar(1)
  anneeEtude       Int
  code_specialite  String        @db.VarChar(30)
  nombre_etudiants Int
  Specialite       Specialite    @relation(fields: [code_specialite], references: [code_specialite], onDelete: Cascade, onUpdate: NoAction, map: "FK_SECTION_SPECIALITE")
  ChargeCours      ChargeCours[]
  Examen           Examen[]
}

model Specialite {
  code_specialite  String             @id(map: "PK_SPECIALITE") @db.VarChar(30)
  nom_specialite   String             @db.VarChar(255)
  code_departement String             @db.VarChar(255)
  palier           String             @db.VarChar(255)
  Departement      Departement        @relation(fields: [code_departement], references: [code_departement], onDelete: SetNull, onUpdate: NoAction, map: "FK_SPECIALITE_DEPARTEMENT")
  ModuleSpecialite ModuleSpecialite[]
  Section          Section[]
}

model Surveillance {
  code_enseignant String      @db.VarChar(30)
  code_local      String      @db.VarChar(10)
  code_module     String      @db.VarChar(30)
  code_section    String      @db.VarChar(30)
  code_creneau    BigInt
  Enseignant      Enseignant  @relation(fields: [code_enseignant], references: [code_enseignant], onDelete: Cascade, onUpdate: NoAction, map: "FK_SURVEILLANCE_ENSEINGNANT")
  LocalExamen     LocalExamen @relation(fields: [code_local, code_module, code_section, code_creneau], references: [code_local, code_module, code_section, code_creneau], onDelete: Cascade, onUpdate: NoAction, map: "FK_SURVEILLANCE_LOCALEXAMEN")

  @@id([code_enseignant, code_local, code_module, code_section, code_creneau], map: "PK_SURVEILLANCE")
  @@unique([code_enseignant, code_creneau], map: "UNIQUE_ENSEIGNANT_CRENEAU")
}

model ChargeCours {
  code_section    String     @db.VarChar(30)
  code_module     String     @db.VarChar(30)
  code_enseignant String     @db.VarChar(30)
  Enseignant      Enseignant @relation(fields: [code_enseignant], references: [code_enseignant], onDelete: SetNull, onUpdate: NoAction, map: "FK_CHARGECOURS_ENSEIGNANT")
  Module          Module     @relation(fields: [code_module], references: [code_module], onDelete: Cascade, onUpdate: NoAction, map: "FK_CHARGECOURS_MODULE")
  Section         Section    @relation(fields: [code_section], references: [code_section], onDelete: Cascade, onUpdate: NoAction, map: "FK_CHARGECOURS_SECTION")

  @@id([code_section, code_module, code_enseignant], map: "PK_CHARGECOURS")
  @@unique([code_section, code_module], map: "UNIQUE_SECTION_MODULE_CHARGECOURS")
}
